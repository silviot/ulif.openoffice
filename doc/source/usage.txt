Using the scripts
=================

There are four main components that come with ``ulif.openoffice``:

* an oooctl-server that starts OpenOffice.org in background.

* a pyuno-server that listens for requests to convert docs. This
  server depends on a running oooctl-server.

* a client component that can be accessed via API and can talk to the
  pyuno-server. This way you can convert docs from Python and the
  Python version has not to provide the uno lib.

* a converter script (also in ./bin), you can use on the
  commandline. It depends on a running oooctl server and can convert
  docs to .txt, .html and .pdf format. It is merely a little test
  programme that was used during development, but you might have some
  use for it.

You can start the oooctl-server with::

  $ ./bin/oooctl start

Do::

  $ ./bin/oooctl --help

to see all options.

You can stop the daemon with::

  $ ./bin/oooctl stop

The same applies to the pyuno-server::

  $ ./bin/pyunoctl start
  $ ./bin/pyunoctl --help
  $ ./bin/pyunoctl stop

do what you think they do.

The converter script can be called like this::

  $ ./bin/convert sourcefile.doc

to create a sourcefile.txt conversion.

Do::

  $ ./bin/convert --pdf sourcefile.doc

to create a PDF of sourefile.doc, and::

  $ ./bin/convert --html sourcefile.doc

to create an HTML version of sourcefile.doc.

For the client API see the .txt files in the source.

